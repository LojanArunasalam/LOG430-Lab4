services: 
  django-client-1: 
    container_name: django-client-1
    build: . 
    command: python src/app/manage.py runserver 0.0.0.0:8000
    expose:
      - 8000"
  django-client-2: 
    container_name: django-client-2
    build: . 
    command: python src/app/manage.py runserver 0.0.0.0:8001
    expose:
      - '8001'
  django-client-3: 
    container_name: django-client-3
    build: . 
    command: python src/app/manage.py runserver 0.0.0.0:8002
    expose:
      - '8002'
  db:
    image: postgres:16
    container_name: db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes: 
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql  
  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
    ports:
      - '9100:9100'
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'
    networks:
      - monitoring
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    restart: unless-stopped
    ports:
      - '3000:3000'
    networks: 
      - monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes: 
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.listen-address=:9090'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    restart: unless-stopped
    networks:
      - monitoring
  nginx: 
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - django-client-1
      - django-client-2
      - django-client-3

networks: 
  monitoring:
    driver: bridge

